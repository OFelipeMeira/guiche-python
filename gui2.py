import time
import tkinter
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
import pymysql
import pygame
from pathlib import Path
from PIL import Image,ImageTk

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage




def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

pygame.mixer.init()

window2 = Tk()
widtel = 1920
heitel = 1080
relquad = True



OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r".\assets\frame0")




window2.geometry(f"{widtel}x{heitel}+{1080}+{0}") # <- this is the key, offset to the right by w0)
window2.configure(bg = "#FFFFFF")

window2.overrideredirect(True)



def corrigewid(widget):
    return int(widtel * widget / 1920)

def corrigehei(widget):
    return int(heitel * widget / 1080)

def corrigetam():
    return 18 if relquad else 22

def corrigelar():
    return corrigehei(55) * -1 if relquad else corrigehei(60) * -1

img= (Image.open("image_1.png"))

resized_image = img.resize((corrigewid(960),corrigehei(246)), Image.ANTIALIAS)
new_image = ImageTk.PhotoImage(resized_image)

def conecta():
   
    try:
        conexao = pymysql.connect(
            user="butterfly@peixe",
            password="Manteigavoadora1",
            host="peixe.mariadb.database.azure.com",
            port=3306,
            database='secretariasenai'
        )
    except Exception as e:
            print(f"a")
    else:
       return conexao

def executaefecha(cursor, conexao):
    cursor.fetchone()
    conexao.commit()
    cursor.close()
    conexao.close()

def blink():
    chamadoprincip["bg"] = "#D9D9D9"

def chamados():
    while True:
        try:
            lista = []
            conexao = conecta()
            cursor = conexao.cursor()
            cursor.execute("SELECT name, guiche FROM espera WHERE ja_atendido = 1 ORDER BY ordem DESC")
            linhas = cursor.fetchall()
            cont = 0
            linhas = list(linhas)
            for i in linhas:
                cont += 1
                if cont > 3: 
                    break
                lista.append(i[1])
                lista.append(i[0])
            executaefecha(cursor, conexao)
            time.sleep(1)
            chamado1.configure(text=f"{lista[1]}\nGuichê: {lista[0]}")
            chamado2.configure(text=f"{lista[3]}\nGuichê: {lista[2]}")
            chamado3.configure(text=f"{lista[5]}\nGuichê: {lista[4]}")
            if lista[1] != str(chamadoprincip.cget('text')):
                chamadoprincip["bg"] = "#00DDFF"
                pygame.mixer.music.load('mixkit-alert-bells-echo-765.wav')
                pygame.mixer.music.play(loops=0)
                window2.after(4000, blink)
            chamadoprincip.configure(text=f"{lista[1]}")
            chamadoguiche.configure(text=f"{lista[0]}")
            chamado1.update()
            chamado2.update()
            chamado3.update()
            chamadoprincip.update()
            chamadoguiche.update()
        except Exception as e:
            print(e)
            continue


canvas2 = Canvas(
    bg = "#FFFFFF",
    height = heitel,
    width = widtel,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)
canvas2.create_rectangle(
    corrigewid(0),
    corrigehei(1115.0),
    corrigewid(1115),
    corrigehei(0),
    fill="#D9D9D9",
    outline=""
)
canvas2.place(x=0, y=0)
canvas2.create_rectangle(
    corrigewid(0),
    corrigehei(827),
    corrigewid(1115),
    corrigehei(1080),
    fill="#ff0000",
    outline="")
image_1 = canvas2.create_image(
    corrigewid(538),
    corrigehei(959),
    image=new_image
)

canvas2.create_text(
    corrigewid(1180),
    corrigehei(80),
    anchor="nw",
    text="ÚLTIMAS CHAMADAS",
    fill="#000000",
    font=("Gotham Bold", corrigelar())
)

canvas2.create_text(
    corrigewid(400),
    corrigehei(64),
    anchor="nw",
    text="NOME",
    fill="#000000",
    font=("Gotham Bold", corrigehei(90) * -1)
)

canvas2.create_text(
    corrigewid(360),
     corrigehei(420),
    anchor="nw",
    text="GUICHÊ",
    fill="#000000",
    font=("Gotham Bold", corrigehei(90) * -1)
)

chamado1 = tkinter.Label(
    width=corrigetam(),
    bg="#D9D9D9",
    font=("Gotham Medium", corrigehei(52) * -1),
)
chamado1.place(
    x=corrigewid(1170),
    y=corrigehei(200)
)

chamado2 = tkinter.Label(
    width=corrigetam(),
    bg="#D9D9D9",
    font=("Gotham Medium", corrigehei(52) * -1),
)
chamado2.place(
    x=corrigewid(1170),
    y=corrigehei(440)
)

chamado3 = tkinter.Label(
    width=corrigetam(),
    bg="#D9D9D9",
    font=("Gotham Medium", corrigehei(52) * -1),
)
chamado3.place(
    x=corrigewid(1170),
    y=corrigehei(700)
)

chamadoprincip = tkinter.Label(
    width=corrigetam(),
    bg="#D9D9D9",
    font=("Gotham Medium", corrigehei(75) * -1),
    anchor="center",
    wraplength=1000

)

chamadoprincip.place(
    x=corrigewid(31),
    y=corrigehei(198)
)

chamadoguiche = tkinter.Label(
    width=4,
    bg="#D9D9D9",
    font=("Gotham Medium", corrigehei(100) * -1),
    anchor="center",

)

chamadoguiche.place(
    x=corrigewid(440),
    y=corrigehei(570)
)




chamados()
window2.mainloop()


